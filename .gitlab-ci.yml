# This file defines the pipeline that runs when
# pushing to gitlab! // STEFFE
variables:
  TESTVAR: hejhej

stages:
  - build


docker-build:
  stage: build
  image: docker:18.09.7-dind
  services:
    - docker:18.09.7-dind
  variables:
    DOCKER_HOST: tcp://localhost:2375/
    DOCKER_DRIVER: overlay
  only:
    changes:
      - postgres/*
  before_script:
    - docker login -u "$GIT_REGISTRY_USER" -p "$GIT_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build -t $IMG_REGISTRY/postgres$tag postgres/
    - docker push $IMG_REGISTRY/postgres$tag
  tags:
    - k8-runner


# # Test building node_modules in /server and store it in artifact repository
# build_npm1:
#   image: node:latest
#   stage: build
#   script:
#    - npm install ./server
#   only:             # Pipeline will only trigger on commits 
#     - pipeline-test # to this branch
#   except: # ignore anton's work
#     changes:
#       - infrastructure/*
#   artifacts:
#     name: hello
#     when: on_success
#     paths:
#       - node_modules/
# #  environment:           # Don't use this until we actually
# #    name: not_production # deploy to production :)

# # Artifacts /client
# build_npm2:
#   image: node:latest
#   stage: build
#   script:
#    - npm install ./client
#   only: 
#     - pipeline-test
#   except: # ignore anton's work
#     changes:
#       - infrastructure/*
#   artifacts:
#     name: npm_client
#     when: on_success
#     paths:
#       - node_modules/
